{
  "info": {
    "name": "Inventory Management System API",
    "description": "Complete API collection for the inventory management system",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000/api",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@example.com\",\n  \"password\": \"AdminPass123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('authToken', response.token);",
                  "    console.log('Auth token saved:', response.token);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "profile"]
            }
          }
        }
      ]
    },
    {
      "name": "Products",
      "item": [
        {
          "name": "Get All Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products",
              "host": ["{{baseUrl}}"],
              "path": ["products"]
            }
          }
        },
        {
          "name": "Get Product by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products/{{productId}}",
              "host": ["{{baseUrl}}"],
              "path": ["products", "{{productId}}"]
            }
          }
        },
        {
          "name": "Create Product",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Product\",\n  \"sku\": \"TEST-001\",\n  \"category\": \"Electronics\",\n  \"unit\": \"pcs\",\n  \"sellingPrice\": 75\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/products",
              "host": ["{{baseUrl}}"],
              "path": ["products"]
            }
          }
        },
        {
          "name": "Update Product",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Test Product\",\n  \"sellingPrice\": 80\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/products/{{productId}}",
              "host": ["{{baseUrl}}"],
              "path": ["products", "{{productId}}"]
            }
          }
        },
        {
          "name": "Delete Product",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products/{{productId}}",
              "host": ["{{baseUrl}}"],
              "path": ["products", "{{productId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Warehouses",
      "item": [
        {
          "name": "Get All Warehouses",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/warehouses",
              "host": ["{{baseUrl}}"],
              "path": ["warehouses"]
            }
          }
        },
        {
          "name": "Get Warehouse by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/warehouses/{{warehouseId}}",
              "host": ["{{baseUrl}}"],
              "path": ["warehouses", "{{warehouseId}}"]
            }
          }
        },
        {
          "name": "Create Warehouse",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Warehouse\",\n  \"location\": \"Test City\",\n  \"capacity\": 1000\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/warehouses",
              "host": ["{{baseUrl}}"],
              "path": ["warehouses"]
            }
          }
        },
        {
          "name": "Transfer Stock",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"targetWarehouseId\": \"{{targetWarehouseId}}\",\n  \"transfers\": [\n    {\n      \"productId\": \"{{productId}}\",\n      \"quantity\": 10\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/warehouses/{{warehouseId}}/transfer",
              "host": ["{{baseUrl}}"],
              "path": ["warehouses", "{{warehouseId}}", "transfer"]
            }
          }
        }
      ]
    },
    {
      "name": "Purchases",
      "item": [
        {
          "name": "Get All Purchases",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/purchases",
              "host": ["{{baseUrl}}"],
              "path": ["purchases"]
            }
          }
        },
        {
          "name": "Get Purchase by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/purchases/{{purchaseId}}",
              "host": ["{{baseUrl}}"],
              "path": ["purchases", "{{purchaseId}}"]
            }
          }
        },
        {
          "name": "Create Purchase",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"supplierId\": \"{{supplierId}}\",\n  \"productId\": \"{{productId}}\",\n  \"quantity\": 50,\n  \"unitCost\": 100,\n  \"warehouseId\": \"{{warehouseId}}\",\n  \"purchaseDate\": \"2025-10-01T10:00:00+05:00\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/purchases",
              "host": ["{{baseUrl}}"],
              "path": ["purchases"]
            }
          }
        },
        {
          "name": "Confirm Payment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"paymentDate\": \"2025-10-01T11:00:00+05:00\",\n  \"paymentMethod\": \"bank_transfer\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/purchases/{{purchaseId}}/confirm-payment",
              "host": ["{{baseUrl}}"],
              "path": ["purchases", "{{purchaseId}}", "confirm-payment"]
            }
          }
        }
      ]
    },
    {
      "name": "Sales",
      "item": [
        {
          "name": "Get All Sales Orders",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/sales/orders",
              "host": ["{{baseUrl}}"],
              "path": ["sales", "orders"]
            }
          }
        },
        {
          "name": "Create Sales Order",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerName\": \"Test Customer\",\n  \"customerEmail\": \"test@example.com\",\n  \"items\": [\n    {\n      \"productId\": \"{{productId}}\",\n      \"quantity\": 5,\n      \"unitPrice\": 150,\n      \"warehouseId\": \"{{warehouseId}}\"\n    }\n  ],\n  \"orderDate\": \"2025-10-03T09:00:00+05:00\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/sales/orders",
              "host": ["{{baseUrl}}"],
              "path": ["sales", "orders"]
            }
          }
        },
        {
          "name": "Dispatch Order",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/sales/{{orderId}}/dispatch",
              "host": ["{{baseUrl}}"],
              "path": ["sales", "{{orderId}}", "dispatch"]
            }
          }
        },
        {
          "name": "Deliver Order",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/sales/{{orderId}}/deliver",
              "host": ["{{baseUrl}}"],
              "path": ["sales", "{{orderId}}", "deliver"]
            }
          }
        },
        {
          "name": "Return Order",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"items\": [\n    {\n      \"productId\": \"{{productId}}\",\n      \"quantity\": 2,\n      \"reason\": \"customer_change_mind\",\n      \"condition\": \"new\",\n      \"warehouseId\": \"{{warehouseId}}\"\n    }\n  ],\n  \"customerName\": \"Test Customer\",\n  \"notes\": \"Customer requested return\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/sales/{{orderId}}/return",
              "host": ["{{baseUrl}}"],
              "path": ["sales", "{{orderId}}", "return"]
            }
          }
        }
      ]
    },
    {
      "name": "Reports",
      "item": [
        {
          "name": "Dashboard Metrics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/reports/dashboard",
              "host": ["{{baseUrl}}"],
              "path": ["reports", "dashboard"]
            }
          }
        },
        {
          "name": "Product Report",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/reports/product/{{productId}}",
              "host": ["{{baseUrl}}"],
              "path": ["reports", "product", "{{productId}}"]
            }
          }
        },
        {
          "name": "Reports Table",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/reports/table",
              "host": ["{{baseUrl}}"],
              "path": ["reports", "table"]
            }
          }
        }
      ]
    },
    {
      "name": "Suppliers",
      "item": [
        {
          "name": "Get All Suppliers",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/suppliers",
              "host": ["{{baseUrl}}"],
              "path": ["suppliers"]
            }
          }
        },
        {
          "name": "Get Supplier by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/suppliers/{{supplierId}}",
              "host": ["{{baseUrl}}"],
              "path": ["suppliers", "{{supplierId}}"]
            }
          }
        },
        {
          "name": "Create Supplier",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Supplier\",\n  \"company\": \"Test Company Ltd\",\n  \"email\": \"supplier@test.com\",\n  \"phone\": \"+92-300-1234567\",\n  \"supplierCode\": \"SUP-TEST-001\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/suppliers",
              "host": ["{{baseUrl}}"],
              "path": ["suppliers"]
            }
          }
        }
      ]
    },
    {
      "name": "Test Flow",
      "item": [
        {
          "name": "Complete Test Flow",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/reports/dashboard",
              "host": ["{{baseUrl}}"],
              "path": ["reports", "dashboard"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Test the final state after seed flow",
                  "if (pm.response.code === 200) {",
                  "    const data = pm.response.json();",
                  "    ",
                  "    // Expected final counts",
                  "    const expectedProducts = 3;",
                  "    const expectedStock = 170;",
                  "    const expectedWarehouses = 1;",
                  "    const expectedDispatched = 15;",
                  "    const expectedReturns = 5;",
                  "    const expectedDelivered = 10;",
                  "    ",
                  "    // Verify counts",
                  "    pm.test('Total Products = 3', function () {",
                  "        pm.expect(data.totalProducts).to.eql(expectedProducts);",
                  "    });",
                  "    ",
                  "    pm.test('Total Stock = 170', function () {",
                  "        pm.expect(data.totalItemsInStock).to.eql(expectedStock);",
                  "    });",
                  "    ",
                  "    pm.test('Total Warehouses = 1', function () {",
                  "        pm.expect(data.totalWarehouses).to.eql(expectedWarehouses);",
                  "    });",
                  "    ",
                  "    pm.test('Dispatched Units = 15', function () {",
                  "        pm.expect(data.totalDispatchedProducts.units).to.eql(expectedDispatched);",
                  "    });",
                  "    ",
                  "    pm.test('Returns = 5', function () {",
                  "        pm.expect(data.returns.units).to.eql(expectedReturns);",
                  "    });",
                  "    ",
                  "    pm.test('Delivered = 10', function () {",
                  "        pm.expect(data.successfulDeliveries.units).to.eql(expectedDelivered);",
                  "    });",
                  "    ",
                  "    console.log('✅ All verification tests passed!');",
                  "    console.log('Final State:', {",
                  "        products: data.totalProducts,",
                  "        stock: data.totalItemsInStock,",
                  "        warehouses: data.totalWarehouses,",
                  "        dispatched: data.totalDispatchedProducts.units,",
                  "        returns: data.returns.units,",
                  "        delivered: data.successfulDeliveries.units",
                  "    });",
                  "} else {",
                  "    pm.test('API Response', function () {",
                  "        pm.expect.fail('API request failed with status: ' + pm.response.code);",
                  "    });",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}
